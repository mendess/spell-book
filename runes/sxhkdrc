# TODO: Disable keybinds in certain programs
# F1
#     : # fuck help pages

super + Return
    $TERMINAL

super + shift + Return
    termFromHere

super + control + Return
    termFromHere --class floating-terminal

super + control + alt + shift + l
    zathura $SPELLS/layout.pdf

super + d
    dmenu_run -i -l 20
#   cmd=$( (pacman -Qqe | sed -E 's/-(git|bin|desktop)//g' | while read -r cmd; do command -v "$cmd" 2>/dev/null; done & \
#                 find ~/.local/bin ! -type d & \
#                 find ~/.local/share/cargo/bin ! -type d) | xargs -L1 basename | dmenu -i -l 20); \
#   case $cmd in \
#   *\; ) "$TERMINAL" --hold -e "$(printf "%s" "${cmd}" | cut -d';' -f1)";; \
#   * ) ${cmd} ;; \
#   esac & disown

# super + shift + f
#     $TERMINAL --class floating-terminal,floating-terminal -e f launcher


@super + @shift + @period
    xdotool mousedown 1; xdotool mouseup 1

super + shift + d
    menu GUI

super + shift + t
    todo gui

super + s
    ssh-menu

super + p
    projects

super + F9
    changeMeWall

super + shift + F9
    pape=$(xclip -sel clip -o) ; \
    notify-send -a "sxhrd" "Changing to clipboard wallpaper" "$pape" -u low ; \
    changeMeWall "$pape"

super + F8
    feh --bg-fill --no-fehbg ~/.local/share/wallpapers/home.png

super + control + m
    $TERMINAL -e pacmixer

super + {F2, F3}
    {~/.config/sxhkd/browser-program || $BROWSER, ~/.config/sxhkd/chat-program || discord --no-sandbox}

super + shift + F2
    $BROWSER -private-window https://duckduckgo.com/

super + shift + F3
    d="$(xdotool search --name "Discord" | \
         xargs -L1 xdotool get_desktop_for_window | \
         grep '^[0-9]' | \
         head -1)" ; \
    while pgrep -i discord; do pkill Discord; done ; \
    bspc rule -a '*:*:Discord Updater' -o desktop=^$(( d + 1 )); \
    bspc rule -a '*:*:Discord' -o desktop=^$(( d + 1 )); \
    discord --no-sandbox


super + m
    $TERMINAL -e neomutt

super + shift + c
    $TERMINAL -e bash -c 'ikhal 2>/dev/null'

super + alt + v
    vim-anywhere ; chmod 777 /tmp/vim-anywhere

super + w
    desktop="$(xdotool get_desktop)"; \
    win_name="$(xdotool search --desktop "$desktop" . | \
            grep -v "$(xdotool getwindowfocus)" | \
            xargs -I 'X' bash -c "printf '%d    %s\\n' 'X' \"\$(xdotool getwindowname 'X')\"" | \
            column -t -s'   ' | \
            dmenu -i -l 10 -p focus | \
            awk -F' ' '\{print $1\}')"; \
    [ "$win_name" ] && xdotool windowactivate "$win_name"


@Print
    cd /tmp ; cuffs.tool --select --clipboard --keep

shift + @Print
    screenshots=$(xdg-user-dir PICTURES)/screenshots; \
    mkdir -p "$screenshots" ; \
    cd "$screenshots" && cuffs.tool --select --rename

alt + @Print
    videos=$(xdg-user-dir VIDEOS)/screen-rec ; \
    mkdir -p "$videos" ; \
    cd "$videos" && cuffs.tool --select --rename --video

shift + alt + Print
    kill -s SIGINT $(cat "/tmp/$LOGNAME/ffmpeg_screenshot_pid")

super + @Print
    cd /tmp ; cuffs.tool --select --floating

super + control + s
    $TERMINAL --class floating-terminal --title floating-terminal -e syncspellbook --hold

super + t
    $TERMINAL -e htop

super + c
    $TERMINAL --class floating-terminal --title floating-terminal -e bc -lq

super + x
    $TERMINAL \
        --option window.dimensions.columns=80 \
        --option window.dimensions.lines=25 \
        --class floating-terminal \
        -e bash -c 'echo -e "\e[1m\t\t   C A L E N D A R\e[0m" ;\
                    khal calendar -o 2>/dev/null ;\
                    read -s -r -n 1'

super + shift + p
    playClipboard

super + v
    clipmenu

XF86AudioMute
    pactl 'set-sink-mute' @DEFAULT_SINK@ toggle

XF86Audio{Raise,Lower}Volume
    pactl 'set-sink-volume' @DEFAULT_SINK@ {+,-}5%

XF86AudioMicMute
    pactl 'set-source-mute' @DEFAULT_SOURCE@ toggle

{XF86AudioPlay,XF86AudioPause}
    RUST_LOG=debug SESSION_KIND=gui m set-{play,pause}

{XF86AudioNext,XF86AudioPrev}
    RUST_LOG=debug SESSION_KIND=gui m {next-file,prev-file}

{XF86AudioForward,XF86AudioRewind}
    RUST_LOG=debug SESSION_KIND=gui m {frwd,back}

super + backslash
    RUST_LOG=debug SESSION_KIND=gui m pause

super + shift + bar
    RUST_LOG=debug SESSION_KIND=gui m quit

super + {minus,plus}
    RUST_LOG=debug SESSION_KIND=gui m {vd,vu} 2

super + {Next,Prior,End,Home}
    RUST_LOG=debug SESSION_KIND=gui m {next,prev,next-file,prev-file}

super + {Up,Down}
    RUST_LOG=debug SESSION_KIND=gui m {frwd,back} 60

super + {Right,Left}
    RUST_LOG=debug SESSION_KIND=gui m {frwd,back} 5

super + {Insert,Delete}
    RUST_LOG=debug SESSION_KIND=gui m {current,ch-cat}

#super + shift + Insert
#    $TERMINAL -e m lyrics
super + shift + Insert
    RUST_LOG=debug SESSION_KIND=cli m current --link | xclip -sel clip; \
    notify-send -u low 'copied'

super + shift + underscore
    ;bspc rule -a mpv -o state=pseudo_tiled rectangle=820x466; \
    SRUST_LOG=debug ESSION_KIND=gui m toggle-video

super + BackSpace
    echo quit | socat - "/tmp/$LOGNAME/mpvalarm"

super + comma
    pkill -SIGUSR2 -x lemon

super + F{6,5}
    brightnessctl set 2{+,-}%

XF86MonBrightness{Up,Down}
    brightnessctl set 2{+,-}%

super + shift + BackSpace
    ssh mendess.xyz python bulb/let_there_be_light.py

super + control + BackSpace
    ssh mendess.xyz python bulb/turn_off.py

super + alt + BackSpace
    ssh mendess.xyz python bulb/let_there_be_light.py confy

super + Pause
    systemctl suspend

super + shift + i
    printf "%s\n" pulls issues notifications | \
        dmenu -l 20 | \
        sed 's|^|https://github.com/|' | \
        xargs --no-run-if-empty $BROWSER

super + shift + o
    echo -e 'lock\nsystemctl suspend\nreboot\nshutdown now' | dmenu -nb '#6b0213' -sb '#a8031e' -nf '#FFFFFF' -sf '#FFFFFF' -l 4 | sh

super + shift + f
    $TERMINAL --class floating-terminal -e f launcher

# DUNST KEYBINDS

control + {_, shift +} space
        dunstctl {close,close-all}

control + {_, shift +} period
        dunstctl {context, action 0}

control + grave
        dunstctl history-pop

###### bspwm
#super + space
#   if bspc query --nodes --node focused.floating; then \
#       bspc node last.local.\!floating -f; \
#   else \
#       bspc node last.local.floating -f; \
#   fi

#super + shift + control + q
#    bspc node -k

#super + {_,shift +} Tab
#   bspc desktop -f {next,prev}.local.occupied

#super + e
#   bspc desktop --layout next

##super + {_,shift +} n
##  bspc desktop --bubble {next,prev}

#super + g
#   bspc node -s biggest.local

#super + shift + e
#   bspc node $(bspc query --nodes --desktop | head -1) --equalize

#super + r
#   bspc node $(bspc query --nodes --desktop | head -1) --circulate forward

#super + i
#   bspc node $(bspc query --nodes --desktop | head -1) -g hidden

#super + control + i
#   bspc node -g hidden

#super + alt + i
#    bspc node $(bspc query -N -n .hidden | tail -n1) -g hidden=off

## super + shift + i
##     for n in $(bspc query --nodes); do bspc node $n -g hidden; done

#super + shift + r
#   bspc node @parent -R 90

#super + control + {h,j,k,l}
#   dir={(right left -10 0),(bottom top 0 +10),(bottom top 0 -10),(right left +10 0)}; \
#    bspc node --resize $\{dir[0]\} $\{dir[2]\} $\{dir[3]\} || bspc node --resize $\{dir[1]\} $\{dir[2]\} $\{dir[3]\}


##  || bspc node $(bspc query --nodes --desktop | head -1) --circulate $\{dir[1]\}

#super + shift + s
#    bspc node -g sticky

#super + shift + m
#    if marked=$(bspc query -N -n .marked); then \
#        bspc node --swap $marked ; \
#        bspc node $marked -g 'marked=off' ; \
#    else \
#        bspc node -g marked ; \
#    fi

#super + colon
#    bspc node --state pseudo_tiled; \
#    bspc node --resize bottom_right 50 800
